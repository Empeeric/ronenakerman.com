{
  "name": "formage",
  "description": "Admin GUI addon for mongoose and non mongoose projects on Express.js",
  "version": "2.0.9",
  "main": "lib/index.js",
  "author": {
    "name": "Etai Peretz",
    "email": "etai@empeeric.com",
    "url": "http://www.empeeric.com/"
  },
  "contributors": [
    {
      "name": "Ishai Jaffe",
      "email": "ishai@bablic.com",
      "url": "http://www.bablic.com/"
    },
    {
      "name": "Refael Ackermann",
      "email": "refael@empeeric.com",
      "url": "http://www.empeeric.com/"
    },
    {
      "email": "etaypere@gmail.com",
      "url": "http://www.empeeric.com/"
    },
    {
      "name": "Alon Valadji",
      "email": "alon@empeeric.com",
      "url": "http://www.empeeric.com/"
    }
  ],
  "dependencies": {
    "lodash": "",
    "async": "",
    "cloudinary": "",
    "nodestrum": "",
    "node-ckeditor": "",
    "formage-mongoose-types": ""
  },
  "devDependencies": {
    "jade": "",
    "express": "",
    "mongoose": ""
  },
  "bundleDependencies": [
    "sji"
  ],
  "keywords": [
    "admin",
    "forms",
    "mongoose",
    "mongoose-gui"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/Empeeric/formage.git"
  },
  "scripts": {
    "start": "./examplerun"
  },
  "bugs": {
    "url": "https://github.com/Empeeric/formage/issues"
  },
  "directories": {
    "example": "./example"
  },
  "engines": {
    "node": "0.11.x"
  },
  "license": "MIT",
  "readme": "<img src=\"http://i.imgur.com/9vVHCPY.png\" align=\"top\" />  Formage [![Build Status](https://travis-ci.org/Empeeric/formage.png?branch=master)](https://travis-ci.org/Empeeric/formage)\n=============\n\n[Bootstraped](http://twitter.github.com/bootstrap/) Admin Forms for MongoDB via [Mongoose](http://mongoosejs.com/),\noriginally forked from [mongoose-admin](https://github.com/marccampbell/mongoose-admin).\n\nUsage\n-----\n[![npm install formage](https://nodei.co/npm/formage.png?downloads=true)](https://nodei.co/npm/formage/)\n<!-- [![NPM](https://nodei.co/npm-dl/formage.png)](https://nodei.co/npm/formage/) -->\n```js\nvar express = require('express'),\n    app = express();\n\nrequire('formage').init(app, express [, models, options]);\n```\n\nLook at `\\example` directory.\n\nOptions\n-------\n```js\n// Site-wide options, and their default values\nrequire('formage').init(app, express, models, {\n    title: 'Admin',\n    root: '/admin',\n    default_section: 'main',\n    username: 'admin',\n    password: 'admin',\n    admin_users_gui: ture\n);\n```\n\n#### Model options\n```js\nvar model = new mongoose.model('songs', schema);\n\nmodel.label = 'My Songs';\nmodel.singular = 'Song';\n\n// external files specific to this model\nmodel.static = {\n   js: [ '/js/songs.js' ],\n   css: ['/css/songs.css' ]\n};\n\n// one-document models\nmodel.single = true;\n\nmodel.formage = {\n    filters: ['artist', 'year'],\n\n    // additional actions on this model\n    actions: [\n       {\n          value: 'release',\n          label: 'Release',\n          func: function (user, ids, callback) {\n             console.log('You just released songs ' + ids);\n             callback();\n          }\n       }\n    ],\n\n    // list of fields to be displayed by formage for this model\n    list: ['number', 'title', 'album', 'artist', 'year'],\n\n    // list of order fields\n    order_by: ['-year', 'album', 'number'],\n\n    // list of fields that must be populated\n    // (see http://mongoosejs.com/docs/api.html#document_Document-populate)\n    list_populate: ['album'],\n\n    // list of fields on which full-text search is available\n    search: ['title', 'album', 'artist']\n};\n```\n\n#### Field options\n```js\nvar schema = new mongoose.Schema({\n    artist: { type: String, label: 'Who made it?' },\n    // lang is a two letter ISO 639-1 code as recognized by google\n    location: { type: Schema.Types.GeoPoint, widget_options: {lang: 'nl'}}\n});\n```\n[ISO 639-1](http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\n\n#### Extending\n``` js\nvar ReversedWidget = formage.widgets.TextWidget.extend({\n    render: function (res) {\n        this.value = this.value.split(\"\").reverse().join(\"\");\n        this.attrs.style = '-moz-transform: scale(-1, 1); -webkit-transform: scale(-1, 1); transform: scale(-1, 1);';\n        this._super(res);\n    }\n});\n\nvar ReversedField = formage.fields.StringField.extend({\n    init: function (options) {\n        options = options || {};\n        options.widget = ReversedWidget;\n        this._super(options);\n    },\n    clean_value: function (req, callback) {\n        this.value = this.value.split(\"\").reverse().join(\"\");\n        this._super(req, callback);\n    }\n});\n\nvar schema = new mongoose.Schema({\n    reversed: { type: String, formageField: ReversedField}\n});\n```\nShout-out to my man @jrowny\n\n---\n\nIf we want to have a complex underlining type we need to \"lie\" to mongoose\n\n```js\nvar TwoDWidget = formage.widgets.TextWidget.extend({\n    render: function (res) {\n        var value = this.value || {};\n        var lat = value.lat;\n        var lng = value.lng;\n        var name = this.name;\n        this.name = name + '_lat';\n        this.value = lat;\n        this._super(res);\n        this.name = name + '_lng';\n        this.value = lng;\n        this._super(res);\n    }\n});\n\n\nvar TwoDField = formage.fields.StringField.extend({\n    init: function (options) {\n        options = options || {};\n        options.widget = TwoDWidget;\n        this._super(options);\n    },\n    to_schema: function () {\n        return {\n            lat: Number,\n            lng: Number\n        };\n    },\n    clean_value: function (req, callback) {\n        var lat = Number(req.body[this.name + '_lat']);\n        var lng = Number(req.body[this.name + '_lng']);\n        this.value = { lat: lat, lng: lng};\n        this._super(req, callback);\n    }\n});\nvar TwoD = function TwoD(path, options) {\n    TwoD.super_.call(this, path, options);\n};\nutil.inherits(TwoD, Schema.Types.Mixed);\nTypes.TwoD = Object;\nSchema.Types.TwoD = TwoD;\n\nvar schema = new mongoose.Schema({\n    two_d: { type: TwoD, formageField: TwoDField}\n});\n```\n\nLicense\n-------\nMIT\n\nSponsor\n--------\n<a id=\"stormlogo\" href=\"http://www.jetbrains.com/webstorm/\" alt=\"Smart IDE for web development with HTML Editor, CSS &amp; JavaScript support\" title=\"Smart IDE for web development with HTML Editor, CSS &amp; JavaScript support\">\n  ![](http://i.imgur.com/ynQ6c.png)\n</a>\n",
  "readmeFilename": "README.md",
  "_id": "formage@2.0.9",
  "dist": {
    "shasum": "f54483a0252acbaceafe4421d493869d477e5076"
  },
  "_from": "formage@2.0.9",
  "_resolved": "https://registry.npmjs.org/formage/-/formage-2.0.9.tgz"
}
